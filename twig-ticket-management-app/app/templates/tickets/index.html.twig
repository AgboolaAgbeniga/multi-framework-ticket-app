{% extends "layouts/base.html.twig" %}

{% block title %}Ticket Management - TicketFlex{% endblock %}

{% block header %}{% endblock %}

{% block content %}
    <div class="min-h-screen flex flex-col">
      {% include 'layouts/header.html.twig' %}

      <main class="flex-1 bg-slate-50 py-8">
        <div class="max-w-[1440px] mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-8">
            <div>
              <h1 class="mb-2 text-2xl font-semibold">Ticket Management</h1>
              <p class="text-slate-600">
                Create, view, edit, and manage your support tickets
              </p>
            </div>
            <button onclick="openTicketModal()" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-[var(--ring)] focus-visible:ring-[var(--ring)]/50 focus-visible:ring-[3px] aria-invalid:ring-[var(--destructive)]/20 dark:aria-invalid:ring-[var(--destructive)]/40 aria-invalid:border-[var(--destructive)] bg-[var(--primary)] text-[var(--primary-foreground)] hover:bg-[color-mix(in oklab,var(--primary) 90%, transparent)] h-9 px-4 py-2 has-[>svg]:px-3">
              <i class="fas fa-plus mr-2"></i>
              New Ticket
            </button>
          </div>

          <!-- Filter -->
          <div class="mb-6 flex items-center gap-3">
            <i class="fas fa-filter text-slate-500"></i>
            <select id="statusFilter" onchange="filterTickets()" class="w-[200px] px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
              <option value="all" {{ filter_status == 'all' ? 'selected' : '' }}>All Tickets</option>
              <option value="open" {{ filter_status == 'open' ? 'selected' : '' }}>Open</option>
              <option value="in_progress" {{ filter_status == 'in_progress' ? 'selected' : '' }}>In Progress</option>
              <option value="closed" {{ filter_status == 'closed' ? 'selected' : '' }}>Closed</option>
            </select>
            <span class="text-sm text-slate-600">
              Showing {{ tickets|length }} ticket{{ tickets|length != 1 ? 's' : '' }}
            </span>
          </div>

          <!-- Tickets Grid -->
          {% if tickets|length == 0 %}
            <div class="text-center py-12">
              <p class="text-slate-600 mb-4">
                {% if filter_status == 'all' %}
                  No tickets yet. Create your first ticket to get started!
                {% else %}
                  No {{ filter_status|replace({'_': ' '}) }} tickets found.
                {% endif %}
              </p>
              {% if filter_status == 'all' %}
                <button onclick="openTicketModal()" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-[var(--ring)] focus-visible:ring-[var(--ring)]/50 focus-visible:ring-[3px] aria-invalid:ring-[var(--destructive)]/20 dark:aria-invalid:ring-[var(--destructive)]/40 aria-invalid:border-[var(--destructive)] bg-[var(--primary)] text-[var(--primary-foreground)] hover:bg-[color-mix(in oklab,var(--primary) 90%, transparent)] h-9 px-4 py-2 has-[>svg]:px-3">
                  <i class="fas fa-plus mr-2"></i>
                  Create First Ticket
                </button>
              {% endif %}
            </div>
          {% else %}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {% for ticket in tickets %}
                        <div class="bg-white p-6 rounded-lg shadow-sm hover:shadow-lg transition-shadow">
                            <div class="flex items-start justify-between mb-3">
                                <div class="flex-1">
                                    <h3 class="text-lg font-semibold mb-2">{{ ticket.title }}</h3>
                                    <div class="flex flex-wrap gap-2">
                                        {% set statusClass = {
                                            'open': 'bg-green-100 text-green-800 border-green-200',
                                            'in_progress': 'bg-amber-100 text-amber-800 border-amber-200',
                                            'closed': 'bg-slate-100 text-slate-800 border-slate-200'
                                        } %}
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border {{ statusClass[ticket.status] }}">
                                            {{ ticket.status|replace({'_': ' '})|title }}
                                        </span>
                                        {% if ticket.priority %}
                                            {% set priorityClass = {
                                                'low': 'bg-blue-100 text-blue-800 border-blue-200',
                                                'medium': 'bg-purple-100 text-purple-800 border-purple-200',
                                                'high': 'bg-red-100 text-red-800 border-red-200'
                                            } %}
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border {{ priorityClass[ticket.priority] }}">
                                                {{ ticket.priority|title }}
                                            </span>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>

                            {% if ticket.description %}
                                <p class="text-slate-600 text-sm mb-4 line-clamp-2">
                                    {{ ticket.description }}
                                </p>
                            {% endif %}

                            <div class="flex items-center justify-between pt-4 border-t border-slate-100">
                                <div class="flex flex-col gap-1 text-sm text-slate-500">
                                    <div class="flex items-center gap-1">
                                        <i class="fas fa-clock"></i>
                                        <span>Created {{ ticket.createdAt|date('M j, Y') }}</span>
                                    </div>
                                    {% if ticket.updatedAt and ticket.updatedAt != ticket.createdAt %}
                                        <div class="flex items-center gap-1">
                                            <i class="fas fa-clock text-indigo-500"></i>
                                            <span class="text-indigo-600">
                                                {% set now = 'now'|date('U') %}
                                                {% set updated = ticket.updatedAt|date('U') %}
                                                {% set diff = now - updated %}
                                                {% if diff < 60 %}
                                                    Updated just now
                                                {% elseif diff < 3600 %}
                                                    Updated {{ (diff / 60)|round }} minute{{ (diff / 60)|round != 1 ? 's' : '' }} ago
                                                {% elseif diff < 86400 %}
                                                    Updated {{ (diff / 3600)|round }} hour{{ (diff / 3600)|round != 1 ? 's' : '' }} ago
                                                {% else %}
                                                    Updated {{ ticket.updatedAt|date('M j, Y') }}
                                                {% endif %}
                                            </span>
                                        </div>
                                    {% endif %}
                                </div>

                                <div class="flex gap-2">
                                    <button onclick="editTicket('{{ ticket.id }}', '{{ ticket.title }}', '{{ ticket.description|escape('js') }}', '{{ ticket.status }}', '{{ ticket.priority }}')" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-[var(--ring)] focus-visible:ring-[var(--ring)]/50 focus-visible:ring-[3px] aria-invalid:ring-[var(--destructive)]/20 dark:aria-invalid:ring-[var(--destructive)]/40 aria-invalid:border-[var(--destructive)] border bg-[var(--background)] text-[var(--foreground)] hover:bg-[var(--accent)] hover:text-[var(--accent-foreground)] dark:bg-[color-mix(in oklab,var(--input) 30%, transparent)] dark:border-[var(--input)] dark:hover:bg-[color-mix(in oklab,var(--input) 50%, transparent)] h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5">
                                        <i class="fas fa-edit mr-1"></i>
                                        Edit
                                    </button>
                                    <button onclick="deleteTicket('{{ ticket.id }}', '{{ ticket.title }}')" class="border inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-[var(--ring)] focus-visible:ring-[var(--ring)]/50 focus-visible:ring-[3px] aria-invalid:ring-[var(--destructive)]/20 aria-invalid:border-[var(--destructive)] bg-[var(--background)] text-red-600 hover:text-red-700 hover:border-red-300 focus-visible:ring-[var(--destructive)]/20 dark:focus-visible:ring-[var(--destructive)]/40 h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5">
                                        <i class="fas fa-trash mr-1"></i>
                                        Delete
                                    </button>
                                </div>
                            </div>
                        </div>
              {% endfor %}
            </div>
          {% endif %}
        </div>
      </main>

      {% include 'layouts/footer.html.twig' %}
    </div>

    <!-- Create/Edit Ticket Modal -->
    <div class="modal micromodal-slide" id="ticketModal" aria-hidden="true">
        <div class="modal__overlay" tabindex="-1" data-micromodal-close>
            <div class="modal__container" role="dialog" aria-modal="true" aria-labelledby="ticketModal-title">
                <header class="modal__header">
                    <h2 class="modal__title" id="ticketModal-title">Create New Ticket</h2>
                </header>
                <main class="modal__content">
                    <p class="text-muted-foreground text-sm mb-6" id="ticketModal-description">Fill in the details to create a new ticket.</p>
                    <form id="ticketForm" class="space-y-4">
                        <div>
                            <label for="ticketTitle" class="block text-sm font-semibold text-[#030213] mb-2">Title *</label>
                            <input
                                id="ticketTitle"
                                name="title"
                                type="text"
                                required
                                maxlength="100"
                                class="file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border px-3 py-1 text-base bg-input-background transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive"
                                placeholder="Enter ticket title"
                            >
                        </div>

                        <div>
                            <label for="ticketDescription" class="block text-sm font-semibold text-[#030213] mb-2">Description</label>
                            <textarea
                                id="ticketDescription"
                                name="description"
                                rows="4"
                                maxlength="500"
                                class="resize-none border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-input-background px-3 py-2 text-base transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm"
                                placeholder="Enter ticket description (optional)"
                            ></textarea>
                            <p class="text-xs text-slate-500 mt-1">
                                <span id="descriptionCount">0</span>/500 characters
                            </p>
                        </div>

                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div>
                                <label for="ticketStatus" class="block text-sm font-semibold text-[#030213] mb-2">Status *</label>
                                <div class="relative">
                                    <button
                                        type="button"
                                        id="ticketStatusTrigger"
                                        class="border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-full items-center justify-between gap-2 rounded-md border bg-input-background px-3 py-2 text-sm whitespace-nowrap transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 h-9 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4"
                                        aria-haspopup="listbox"
                                        aria-expanded="false"
                                    >
                                        <span id="ticketStatusValue" data-slot="select-value">Open</span>
                                        <svg class="size-4 opacity-50" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <path d="m6 9 6 6 6-6"/>
                                        </svg>
                                    </button>
                                    <div
                                        id="ticketStatusContent"
                                        class="w-full bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 absolute top-full left-0 z-50 max-h-60 min-w-[8rem] overflow-x-hidden overflow-y-auto rounded-md border shadow-md hidden mt-1"
                                        role="listbox"
                                        aria-labelledby="ticketStatusTrigger"
                                    >
                                        <div class="p-1 bg-white w-full">
                                            <div
                                                 class="focus:bg-[#e9ebef] focus:text-[#030213] [&_svg:not([class*='text-'])]:text-[#717182] relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2 hover:bg-[#e9ebef] hover:text-[#030213] data-[highlighted]:bg-[#e9ebef] data-[highlighted]:text-[#030213]"
                                                role="option"
                                                data-value="open"
                                                tabindex="0"
                                            >
                                                <span class="absolute right-2 flex size-3.5 items-center justify-center">
                                                    <svg class="size-4 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                        <path d="M20 6L9 17l-5-5"/>
                                                    </svg>
                                                </span>
                                                Open
                                            </div>
                                            <div
                                                class="focus:bg-[#e9ebef] focus:text-[#030213] [&_svg:not([class*='text-'])]:text-[#717182] relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2 hover:bg-[#e9ebef] hover:text-[#030213] data-[highlighted]:bg-[#e9ebef] data-[highlighted]:text-[#030213]"
                                                role="option"
                                                data-value="in_progress"
                                                tabindex="-1"
                                            >
                                                <span class="absolute right-2 flex size-3.5 items-center justify-center">
                                                    <svg class="size-4 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"> 
                                                        <path d="M20 6L9 17l-5-5"/>
                                                    </svg>
                                                </span>
                                                In Progress
                                            </div>
                                            <div
                                                 class="focus:bg-[#e9ebef] focus:text-[#030213] [&_svg:not([class*='text-'])]:text-[#717182] relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2 hover:bg-[#e9ebef] hover:text-[#030213] data-[highlighted]:bg-[#e9ebef] data-[highlighted]:text-[#030213]"
                                                role="option"
                                                data-value="closed"
                                                tabindex="-1"
                                            >
                                                <span class="absolute right-2 flex size-3.5 items-center justify-center">
                                                    <svg class="size-4 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                        <path d="M20 6L9 17l-5-5"/>
                                                    </svg>
                                                </span>
                                                Closed
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" id="ticketStatusHidden" name="status" value="open">
                                </div>
                            </div>

                            <div>
                                <label for="ticketPriority" class="block text-sm font-semibold text-[#030213] mb-2">Priority</label>
                                <div class="relative">
                                    <button
                                        type="button"
                                        id="ticketPriorityTrigger"
                                        class="border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-full items-center justify-between gap-2 rounded-md border bg-input-background px-3 py-2 text-sm whitespace-nowrap transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 h-9 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4"
                                        aria-haspopup="listbox"
                                        aria-expanded="false"
                                    >
                                        <span id="ticketPriorityValue" data-slot="select-value">Medium</span>
                                        <svg class="size-4 opacity-50" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <path d="m6 9 6 6 6-6"/>
                                        </svg>
                                    </button>
                                    <div
                                        id="ticketPriorityContent"
                                        class="w-full bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 absolute top-full left-0 z-50 max-h-60 min-w-[8rem] overflow-x-hidden overflow-y-auto rounded-md border shadow-md hidden mt-1"
                                        role="listbox"
                                        aria-labelledby="ticketPriorityTrigger"
                                    > 
                                        <div class="p-1 bg-white">
                                            <div
                                                 class="focus:bg-[#e9ebef] focus:text-[#030213] [&_svg:not([class*='text-'])]:text-[#717182] relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2 hover:bg-[#e9ebef] hover:text-[#030213] data-[highlighted]:bg-[#e9ebef] data-[highlighted]:text-[#030213]"
                                                role="option"
                                                data-value="low"
                                                tabindex="0"
                                            >
                                                <span class="absolute right-2 flex size-3.5 items-center justify-center">
                                                    <svg class="size-4 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                        <path d="M20 6L9 17l-5-5"/>
                                                    </svg>
                                                </span>
                                                Low
                                            </div>
                                            <div
                                                 class="focus:bg-[#e9ebef] focus:text-[#030213] [&_svg:not([class*='text-'])]:text-[#717182] relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2 hover:bg-[#e9ebef] hover:text-[#030213] data-[highlighted]:bg-[#e9ebef] data-[highlighted]:text-[#030213]"
                                                role="option"
                                                data-value="medium"
                                                tabindex="-1"
                                            >
                                                <span class="absolute right-2 flex size-3.5 items-center justify-center">
                                                    <svg class="size-4 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                        <path d="M20 6L9 17l-5-5"/>
                                                    </svg>
                                                </span>
                                                Medium
                                            </div>
                                            <div
                                                 class="focus:bg-[#e9ebef] focus:text-[#030213] [&_svg:not([class*='text-'])]:text-[#717182] relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2 hover:bg-[#e9ebef] hover:text-[#030213] data-[highlighted]:bg-[#e9ebef] data-[highlighted]:text-[#030213]"
                                                role="option"
                                                data-value="high"
                                                tabindex="-1"
                                            >
                                                <span class="absolute right-2 flex size-3.5 items-center justify-center">
                                                    <svg class="size-4 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                        <path d="M20 6L9 17l-5-5"/>
                                                    </svg>
                                                </span>
                                                High
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" id="ticketPriorityHidden" name="priority" value="medium">
                                </div>
                            </div>
                        </div>
                    </form>
                </main>
                <footer class="modal__footer">
                <button id="submitTicket" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive bg-[#030211] hover:bg-[#030211]/90 text-white h-9 px-4 py-2 flex-1">
                        Create Ticket
                    </button>
                    <button class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive border bg-white text-foreground hover:bg-[#e9ebef] hover:text-[#030213] dark:bg-input/30 dark:border-input dark:hover:bg-input/50 h-9 px-4 py-2 flex-1" data-micromodal-close>
                        Cancel
                    </button>
                    
                </footer>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal micromodal-slide" id="deleteModal" aria-hidden="true">
        <div class="modal__overlay" tabindex="-1" data-micromodal-close>
            <div class="modal__container" role="dialog" aria-modal="true" aria-labelledby="deleteModal-title">
                <header class="modal__header">
            
                    <h2 class="modal__title" id="deleteModal-title">Are you sure?</h2>
                </header>
                <main class="modal__content">
                        <p class="text-slate-600 text-sm" id="deleteMessage"></p>
                </main>
                <footer class="modal__footer">
                    <button class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive border bg-background text-foreground hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50 h-9 px-4 py-2 flex-1" data-micromodal-close>
                        Cancel
                    </button>
                    <button id="confirmDelete" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all bg-red-600 text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60 h-9 px-4 py-2 flex-1">
                        Delete
                    </button>
                </footer>
            </div>
        </div>
    </div>
{% endblock %}

{% block footer %}{% endblock %}

{% block scripts %}
<script>
// Custom Select Dropdown functionality
class CustomSelect {
    constructor(triggerId, contentId, valueId, hiddenId) {
        this.trigger = document.getElementById(triggerId);
        this.content = document.getElementById(contentId);
        this.valueElement = document.getElementById(valueId);
        this.hiddenInput = document.getElementById(hiddenId);
        this.isOpen = false;

        this.init();
    }

    init() {
        // Toggle dropdown on trigger click
        this.trigger.addEventListener('click', (e) => {
            e.preventDefault();
            this.toggle();
        });

        // Handle option selection
        this.content.querySelectorAll('[role="option"]').forEach(option => {
            option.addEventListener('click', () => {
                this.selectOption(option);
            });
        });

        // Close on outside click
        document.addEventListener('click', (e) => {
            if (!this.trigger.contains(e.target) && !this.content.contains(e.target)) {
                this.close();
            }
        });

        // Keyboard navigation
        this.trigger.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                this.toggle();
            } else if (e.key === 'Escape') {
                this.close();
            } else if (e.key === 'ArrowDown' && !this.isOpen) {
                e.preventDefault();
                this.open();
            }
        });

        this.content.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                this.close();
                this.trigger.focus();
            }
        });
    }

    toggle() {
        if (this.isOpen) {
            this.close();
        } else {
            this.open();
        }
    }

    open() {
        this.content.classList.remove('hidden');
        this.trigger.setAttribute('aria-expanded', 'true');
        this.isOpen = true;

        // Find the currently selected option (the one with visible checkmark)
        const selectedOption = this.content.querySelector('[role="option"] svg:not(.hidden)');
        let optionToFocus = selectedOption ? selectedOption.closest('[role="option"]') : null;

        // If no selected option, focus the first option
        if (!optionToFocus) {
            optionToFocus = this.content.querySelector('[role="option"]');
        }

        console.log('Dropdown opened. Selected option:', selectedOption ? selectedOption.closest('[role="option"]').textContent.trim() : 'None');
        console.log('Focusing option:', optionToFocus ? optionToFocus.textContent.trim() : 'None');

        if (optionToFocus) {
            optionToFocus.focus();
        }
    }

    close() {
        this.content.classList.add('hidden');
        this.trigger.setAttribute('aria-expanded', 'false');
        this.isOpen = false;
    }

    selectOption(option) {
        const value = option.getAttribute('data-value');
        const text = option.textContent.trim();

        // Update display value
        this.valueElement.textContent = text;

        // Update hidden input
        this.hiddenInput.value = value;

        // Update checkmarks
        this.content.querySelectorAll('[role="option"] svg').forEach(svg => {
            svg.classList.add('hidden');
        });
        option.querySelector('svg').classList.remove('hidden');

        this.close();
        this.trigger.focus();
    }

    setValue(value) {
        const option = this.content.querySelector(`[data-value="${value}"]`);
        if (option) {
            this.selectOption(option);
        }
    }
}

// Initialize custom selects
let statusSelect, prioritySelect;

document.addEventListener('DOMContentLoaded', function() {
    statusSelect = new CustomSelect('ticketStatusTrigger', 'ticketStatusContent', 'ticketStatusValue', 'ticketStatusHidden');
    prioritySelect = new CustomSelect('ticketPriorityTrigger', 'ticketPriorityContent', 'ticketPriorityValue', 'ticketPriorityHidden');
});

function filterTickets() {
    const status = document.getElementById('statusFilter').value;
    window.location.href = `/tickets?status=${status}`;
}

function openTicketModal() {
    document.getElementById('ticketModal-title').textContent = 'Create New Ticket';
    document.getElementById('ticketModal-description').textContent = 'Fill in the details to create a new ticket.';
    document.getElementById('submitTicket').textContent = 'Create Ticket';

    // Reset form
    document.getElementById('ticketForm').reset();
    document.getElementById('ticketTitle').value = '';
    document.getElementById('ticketDescription').value = '';
    statusSelect.setValue('open');
    prioritySelect.setValue('medium');
    updateDescriptionCount();

    // Set up submit handler for create
    document.getElementById('submitTicket').onclick = () => submitTicketForm('create');

    MicroModal.show('ticketModal');
}

function editTicket(id, title, description, status, priority) {
    document.getElementById('ticketModal-title').textContent = 'Edit Ticket';
    document.getElementById('ticketModal-description').textContent = 'Update the ticket details below.';
    document.getElementById('submitTicket').textContent = 'Update Ticket';

    // Populate form with ticket data
    document.getElementById('ticketTitle').value = title;
    document.getElementById('ticketDescription').value = description || '';
    statusSelect.setValue(status);
    prioritySelect.setValue(priority || 'medium');
    updateDescriptionCount();

    // Set up submit handler for update
    document.getElementById('submitTicket').onclick = () => submitTicketForm('update', id);

    MicroModal.show('ticketModal');
}

function submitTicketForm(action, ticketId = null) {
    const formData = new FormData(document.getElementById('ticketForm'));
    const data = Object.fromEntries(formData.entries());

    // Basic validation
    if (!data.title || data.title.trim().length === 0) {
        alert('Title is required');
        return;
    }

    if (!data.status) {
        alert('Status is required');
        return;
    }

    const form = document.createElement('form');
    form.method = 'POST';

    if (action === 'create') {
        form.action = '/tickets/create';
    } else {
        form.action = `/tickets/${ticketId}/edit`;
    }

    // Add form data as hidden inputs
    Object.keys(data).forEach(key => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = key;
        input.value = data[key];
        form.appendChild(input);
    });

    document.body.appendChild(form);
    form.submit();
}

function updateDescriptionCount() {
    const textarea = document.getElementById('ticketDescription');
    const counter = document.getElementById('descriptionCount');
    counter.textContent = textarea.value.length;
}

// Update counter on input
document.addEventListener('DOMContentLoaded', function() {
    const textarea = document.getElementById('ticketDescription');
    if (textarea) {
        textarea.addEventListener('input', updateDescriptionCount);
    }
});

function deleteTicket(id, title) {
    console.log('deleteTicket called with id:', id, 'title:', title);
    document.getElementById('deleteMessage').textContent = `This will permanently delete the ticket "${title}". This action cannot be undone.`;
    document.getElementById('confirmDelete').onclick = () => {
        console.log('Confirm delete clicked, submitting form to:', `/tickets/${id}/delete`);
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/tickets/${id}/delete`;
        document.body.appendChild(form);
        form.submit();
    };
    MicroModal.show('deleteModal');
}
</script>
{% endblock %}